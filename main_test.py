from main import solve


def test_solve_basic():
    # Note that this solver can return different solution each time if there's
    # more than one, hence this test unsolved board is chosen such that there's
    # only one solution
    unsolved = [
        [1, 9, 8, 0, 0, 0, 0, 5, 3],
        [7, 0, 2, 5, 0, 3, 0, 0, 0],
        [0, 0, 0, 8, 1, 0, 0, 2, 6],
        [0, 0, 7, 0, 8, 4, 2, 0, 0],
        [0, 1, 5, 9, 3, 2, 0, 0, 0],
        [4, 2, 6, 0, 5, 0, 0, 0, 0],
        [3, 0, 0, 2, 7, 0, 0, 6, 0],
        [2, 0, 0, 0, 0, 0, 4, 8, 7],
        [0, 0, 9, 0, 4, 8, 5, 0, 0]
    ]

    solved = [
        [1, 9, 8, 4, 2, 6, 7, 5, 3],
        [7, 6, 2, 5, 9, 3, 8, 4, 1],
        [5, 4, 3, 8, 1, 7, 9, 2, 6],
        [9, 3, 7, 6, 8, 4, 2, 1, 5],
        [8, 1, 5, 9, 3, 2, 6, 7, 4],
        [4, 2, 6, 7, 5, 1, 3, 9, 8],
        [3, 8, 4, 2, 7, 5, 1, 6, 9],
        [2, 5, 1, 3, 6, 9, 4, 8, 7],
        [6, 7, 9, 1, 4, 8, 5, 3, 2]
    ]

    assert solve(unsolved) == solved


def test_solve_basic_2():
    unsolved = [
        [0, 7, 6, 0, 0, 4, 9, 3, 0],
        [2, 1, 0, 5, 0, 9, 0, 7, 0],
        [9, 0, 4, 0, 0, 7, 2, 0, 0],
        [0, 9, 0, 2, 0, 8, 0, 0, 7],
        [4, 0, 0, 1, 7, 5, 3, 6, 0],
        [0, 5, 0, 0, 4, 3, 8, 0, 0],
        [7, 0, 9, 0, 0, 1, 0, 8, 4],
        [0, 0, 0, 7, 0, 0, 1, 2, 3],
        [1, 0, 0, 4, 8, 0, 7, 0, 5]
    ]

    solved = [
        [5, 7, 6, 8, 2, 4, 9, 3, 1],
        [2, 1, 8, 5, 3, 9, 4, 7, 6],
        [9, 3, 4, 6, 1, 7, 2, 5, 8],
        [3, 9, 1, 2, 6, 8, 5, 4, 7],
        [4, 8, 2, 1, 7, 5, 3, 6, 9],
        [6, 5, 7, 9, 4, 3, 8, 1, 2],
        [7, 2, 9, 3, 5, 1, 6, 8, 4],
        [8, 4, 5, 7, 9, 6, 1, 2, 3],
        [1, 6, 3, 4, 8, 2, 7, 9, 5]
    ]

    assert solve(unsolved) == solved
